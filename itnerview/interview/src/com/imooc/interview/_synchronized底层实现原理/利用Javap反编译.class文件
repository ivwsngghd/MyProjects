- javap -verbose SyncBlockAndMethod.class
Classfile /E:/GitRepository/itnerview/interview/out/production/interview/com/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod.class
  Last modified 2019-9-9; size 888 bytes
  MD5 checksum aaabb6a1aee8fbfc5a674ee8f31d67a7
  Compiled from "SyncBlockAndMethod.java"
public class com.imooc.interview._synchronized底层实现原理.SyncBlockAndMethod
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #8.#24         // java/lang/Object."<init>":()V
   #2 = Fieldref           #25.#26        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = String             #27            // Hello
   #4 = Methodref          #28.#29        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #5 = String             #30            // World
   #6 = String             #31            // Hello Again
   #7 = Class              #32            // com/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod
   #8 = Class              #33            // java/lang/Object
   #9 = Utf8               <init>
  #10 = Utf8               ()V
  #11 = Utf8               Code
  #12 = Utf8               LineNumberTable
  #13 = Utf8               LocalVariableTable
  #14 = Utf8               this
  #15 = Utf8               Lcom/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod;
  #16 = Utf8               syncsTask
  #17 = Utf8               StackMapTable
  #18 = Class              #32            // com/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod
  #19 = Class              #33            // java/lang/Object
  #20 = Class              #34            // java/lang/Throwable
  #21 = Utf8               syncTask
  #22 = Utf8               SourceFile
  #23 = Utf8               SyncBlockAndMethod.java
  #24 = NameAndType        #9:#10         // "<init>":()V
  #25 = Class              #35            // java/lang/System
  #26 = NameAndType        #36:#37        // out:Ljava/io/PrintStream;
  #27 = Utf8               Hello
  #28 = Class              #38            // java/io/PrintStream
  #29 = NameAndType        #39:#40        // println:(Ljava/lang/String;)V
  #30 = Utf8               World
  #31 = Utf8               Hello Again
  #32 = Utf8               com/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod
  #33 = Utf8               java/lang/Object
  #34 = Utf8               java/lang/Throwable
  #35 = Utf8               java/lang/System
  #36 = Utf8               out
  #37 = Utf8               Ljava/io/PrintStream;
  #38 = Utf8               java/io/PrintStream
  #39 = Utf8               println
  #40 = Utf8               (Ljava/lang/String;)V
{
  public com.imooc.interview._synchronized底层实现原理.SyncBlockAndMethod();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod;

  public void syncsTask();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter                      //锁的入口
         4: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         7: ldc           #3                  // String Hello
         9: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        12: aload_0
        13: dup
        14: astore_2
        15: monitorenter                      //锁的入口
        16: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        19: ldc           #5                  // String World
        21: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        24: aload_2
        25: monitorexit                       //锁的出口
        26: goto          34
        29: astore_3
        30: aload_2
        31: monitorexit                       //锁的出口
        32: aload_3
        33: athrow
        34: aload_1
        35: monitorexit                       //锁的出口
        36: goto          46
        39: astore        4
        41: aload_1
        42: monitorexit                       //锁的出口
        43: aload         4
        45: athrow
        46: return
      Exception table:
         from    to  target type
            16    26    29   any
            29    32    29   any
             4    36    39   any
            39    43    39   any
      LineNumberTable:
        line 6: 0
        line 7: 4
        line 8: 12
        line 9: 16
        line 10: 24
        line 11: 34
        line 12: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lcom/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod;
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class com/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod, class java/lang/Object, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6

  public synchronized void syncTask();
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #6                  // String Hello Again
         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 15: 0
        line 16: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/imooc/interview/_synchronized底层实现原理/SyncBlockAndMethod;
}
SourceFile: "SyncBlockAndMethod.java"


- 可重入性：意为获取了锁的对象可以再次获取自己的这个锁，不会被阻塞；